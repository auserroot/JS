<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
        <p> 
            <!-- 0123 -->
            emm
            <span>0</span>
            <span class="0" id="1">1</span>
            <span>2</span>
            emmmm
        </p>
    <script>
        /*
            DOM:一个由节点和对象（包含属性和方法的对象）组成的结构集合

            节点：包括 html标签 文本内容 注释 空格 等

            DOM节点：常用分为三类  元素节点 文本节点 属性节点

            元素节点：通过getElement. 获取的元素

            文本节点： 通过innerText 获取的元素

            属性节点：通过getAttribute 获取的元素

            获取：
        */    
       //获取p标签
        var p = document.querySelector("p")
        // childNodes ：获取某节点下所有子节点       
        console.log(p.childNodes)
        // ***children ： 获取某节点下所有子级元素节点***（常用）
        console.log(p.children)
        //  firstChild ： 获取某节点下子级第一个节点
        console.log(p.firstChild)
        //  fristElementChild ：获取某元素下子级的第一个元素节点
        console.log(p.firstElementChild)
        //  lastChild ：获取某节点下子级最后一个节点
        console.log(p.lastChild)
        //  lastElementChild ： 获取某节点下子级最后一个元素节点
        console.log(p.lastElementChild)

        var span1=p.children[1]
        //  nextSibling ：获取某节点下一个兄弟节点
        console.log(span1.nextSibling)
        //  nextElementSibling ： 获取某节点下一个兄弟元素节点
        console.log(span1.nextElementSibling)
        //  previousSibling ： 获取某节点上一个兄弟节点
        console.log(span1.previousSibling)
        //  previousElementSibling ：获取某节点上一个兄弟元素节点
        console.log(span1.previousElementSibling)
        // ***parentNode ： 获取某节点的父级节点***（常用）
        console.log(span1.parentNode)
        //  attributes：获取某元素节点的所有属性节点       
        console.log(span1.attributes) //所有属性节点(获取标签属性)
        console.log(span1.attributes[0])//通过下标获取某个属性
        console.log(span1.attributes.id)//通过属性名获取属性
        console.log(span1.attributes["id"])//通过属性名获取属性

        // 元素节点，节点的属性如果是系统属性，那么在dom节点的对象上也有这个属性
        console.dir(span1)
        //注释节点
        console.log(p.childNodes[1])
        console.dir(p.childNodes[1])
        //文档节点
        console.log(document)
        //文档类型节点
        console.log(document.doctype)
        //文档碎片节点
        /*
          可以看作一个可以存储dom元素的空容器，但其内容不显示在页面上
          要插入多个元素时可以现将元素插入文档碎片节点，后一次性输出，这样可以提升性能
          节约渲染次数
        */
       var node = document.createDocumentFragment();
       console.log(node)
    </script>
</body>
</html>