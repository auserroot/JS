<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        /*面向对象
            面向对象是一种编程模式（非语法）
        编程的两种模式
            面向过程
                关注每一个元素、元素间的关系、事件发生的顺序...
            面向对象
                找到对象，调用对象执行目的（找到对象的过程）
        创建对象
            系统内置构造函数
                系统内置有Object构造函数，可以使用new关键字创建对象（var P = new Object())
                创建好，就可以向P对象中动态添加成员
            字面量
                直接用字面量的形式，即{}
                可以直接在创建时添加成员也可以创建好后动态添加
            工厂函数
                先写一个工厂函数
                该函数可以构造对象，并给对象添加属性，最后返回对象
                （手动创建对象、手动添加成员、手动返回对象）
            自定义构造函数
                自动创建对象
                手动添加成员
                自动返回对象
            */
           //内置构造函数创建对象
           var o = new Object()
           //添加成员
           o.name = 'xx'/*(创建好的对象.要添加的成员名 = 值)*/

           //字面量创建对象
           //(直接添加成员)
           var b = {
               name :'lucy'
           }
           //添加
           b.age = '18'/*(创建好的对象.要添加的成员名 = 值)*/

           //工厂函数创建对象
           //先创建一个工厂函数
           function fun(name,age){
               //手动创建对象
               var obj = new Object()
               //手动添加键值对
               obj.name=name||'xiaoming'/*设置默认值（若未传参使用默认值xiaoming）*/
               obj.age=age||18//同上
               //返回对象
               return obj
           }
           //调用函数创建对象
           var a = fun()//未传参使用默认值
           var s = fun('lucy',20)//传入参数使用参数

           //自定义构造函数(构造函数都会自动创建对象并将其返回)
           function Person(name,age){
               //自动创建对象：this=new Object()
               //手动添加成员
               this.name=name||'xiaoming'
               this.age=age||18
               //自动返回对象:return this
           }
           //调用 （前面有new关键字则该函数为构造函数
           var p = new Person()//未传参使用默认值
           var p2 = new Person('lucy',20)
           console.log(p,p2)

           /*构造函数基本使用
                    调用时在函数名前加new关键字（若不加new关键字则调用的是普通函数）
                    函数名一般首字母大写驼峰命名
                    调用时不传参时可以不写（）
                    构造函数内部的this由于与new连用都是指向创建的对象
                    构造函数会自动return一个对象（故构造函数内不需要return）
                        如果return一个基本数据类型（毫无意义）
                        如果return一个引用数据类型（会使构造函数失效）
            */
            //自定义构造函数(构造函数都会自动创建对象并将其返回)
            function Person(name,age){
               //自动创建对象：this=new Object()
               //手动添加成员
               this.name=name||'xiaoming'
               this.age=age||18
               //自动返回对象:return this
               //return 1//return一个基本数据类型
               //return [1,3,5]//return一个引用数据类型
           }
           //调用 （前面有new关键字则该函数为构造函数
           var bb = new Person()
           console.log(bb)
    </script>
</body>
</html>